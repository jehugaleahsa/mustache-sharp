// <auto-generated />
namespace Mustache
{
    using System.Diagnostics;
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    public static class Resources
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("mustache-sharp.Resources", typeof(Resources).GetTypeInfo().Assembly);

        /// <summary>
        /// An attempt was made to define a parameter with a null or an invalid identifier.
        /// </summary>
        public static string BlankParameterName
        {
            get { return GetString("BlankParameterName"); }
        }

        /// <summary>
        /// An attempt was made to define a tag with a null or an invalid identifier.
        /// </summary>
        public static string BlankTagName
        {
            get { return GetString("BlankTagName"); }
        }

        /// <summary>
        /// A parameter with the same name already exists within the tag.
        /// </summary>
        public static string DuplicateParameter
        {
            get { return GetString("DuplicateParameter"); }
        }

        /// <summary>
        /// The {0} tag has already been registered.
        /// </summary>
        public static string DuplicateTagDefinition(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("DuplicateTagDefinition"), p0);
        }

        /// <summary>
        /// The key {0} could not be found.
        /// </summary>
        public static string KeyNotFound(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("KeyNotFound"), p0);
        }

        /// <summary>
        /// Expected a matching {0} tag but none was found.
        /// </summary>
        public static string MissingClosingTag(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("MissingClosingTag"), p0);
        }

        /// <summary>
        /// Encountered an unknown tag: {0}. It was either not registered or exists in a different context.
        /// </summary>
        public static string UnknownTag(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("UnknownTag"), p0);
        }

        /// <summary>
        /// The wrong number of arguments were passed to an {0} tag.
        /// </summary>
        public static string WrongNumberOfArguments(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("WrongNumberOfArguments"), p0);
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
